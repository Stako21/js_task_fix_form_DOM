{"mappings":"I,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCIA,SAAS,EAAY,CAAG,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAO,QACzB,EAAe,EAAI,OAAO,CAAC,WAAY,OAAO,IAAI,SAExD,AAAI,AAAS,UAAT,EACK,EAAa,WAAW,GACtB,AAAS,eAAT,EACF,EACJ,WAAW,GACX,OAAO,CAAC,QAAS,SAAC,CAHhB,EAGyB,OAAA,EAAK,WAAW,E,SAElD,CAEA,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAdqB,SAAS,gBAAgB,CAAC,W,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EActC,GAAG,CAAC,SAAC,CAAd,EACE,EAAM,WAAW,CAAG,GAAyD,MAAA,CAAtD,EAAY,EAAM,YAAY,CAAC,QAAS,eAE/D,IAAM,EAAc,SAAS,aAAa,CAAC,QAE3C,CAAA,EAAY,OAAO,CAAI,GAA6B,MAAA,CAA3B,EAAM,YAAY,CAAC,SAC5C,EAAY,SAAS,CAAG,cACxB,EAAY,WAAW,CAAG,GAAoD,MAAA,CAAjD,EAAY,EAAM,YAAY,CAAC,QAAS,UACrE,EAAM,MAAM,CAAC,EACf","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar getInput = _to_consumable_array(document.querySelectorAll(\"input\"));\nfunction convertName(str) {\n    var mode = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"upper\";\n    var formattedStr = str.replace(/([A-Z])/g, \" $1\").trim();\n    if (mode === \"upper\") return formattedStr.toUpperCase();\n    else if (mode === \"capitalize\") return formattedStr.toLowerCase().replace(/\\b\\w/g, function(char) {\n        return char.toUpperCase();\n    });\n}\ngetInput.map(function(input) {\n    input.placeholder = \"\".concat(convertName(input.getAttribute(\"name\"), \"capitalize\"));\n    var createLabel = document.createElement(\"label\");\n    createLabel.htmlFor = \"\".concat(input.getAttribute(\"name\"));\n    createLabel.className = \"field-label\";\n    createLabel.textContent = \"\".concat(convertName(input.getAttribute(\"name\"), \"upper\"));\n    input.before(createLabel);\n});\n\n//# sourceMappingURL=index.97a0d279.js.map\n","'use strict';\n\nconst getInput = [...document.querySelectorAll('input')];\n\nfunction convertName(str, mode = 'upper') {\n  const formattedStr = str.replace(/([A-Z])/g, ' $1').trim();\n\n  if (mode === 'upper') {\n    return formattedStr.toUpperCase();\n  } else if (mode === 'capitalize') {\n    return formattedStr\n      .toLowerCase()\n      .replace(/\\b\\w/g, (char) => char.toUpperCase());\n  }\n}\n\ngetInput.map((input) => {\n  input.placeholder = `${convertName(input.getAttribute('name'), 'capitalize')}`;\n\n  const createLabel = document.createElement('label');\n\n  createLabel.htmlFor = `${input.getAttribute('name')}`;\n  createLabel.className = 'field-label';\n  createLabel.textContent = `${convertName(input.getAttribute('name'), 'upper')}`;\n  input.before(createLabel);\n});\n"],"names":["arr","_array_like_to_array","len","length","i","arr2","Array","convertName","str","mode","arguments","formattedStr","replace","trim","toUpperCase","toLowerCase","char","getInput","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","input","placeholder","concat","getAttribute","createLabel","createElement","htmlFor","className","textContent","before"],"version":3,"file":"index.97a0d279.js.map"}